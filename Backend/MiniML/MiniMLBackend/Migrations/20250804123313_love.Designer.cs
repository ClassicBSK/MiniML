// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniMLBackend.Dao;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MiniMLBackend.Migrations
{
    [DbContext(typeof(EF_DataContext))]
    [Migration("20250804123313_love")]
    partial class love
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MiniMLBackend.Dao.CSVFile", b =>
                {
                    b.Property<int>("csvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("csvId"));

                    b.Property<int>("columnCount")
                        .HasColumnType("integer");

                    b.Property<string>("csvFile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("timestamp");

                    b.Property<float>("passRate")
                        .HasColumnType("real");

                    b.Property<int>("recordsCount")
                        .HasColumnType("integer");

                    b.Property<int>("simId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("timestamp");

                    b.HasKey("csvId");

                    b.HasIndex("simId")
                        .IsUnique();

                    b.ToTable("csvfiles");
                });

            modelBuilder.Entity("MiniMLBackend.Dao.MLModel", b =>
                {
                    b.Property<int>("modelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("modelId"));

                    b.Property<int>("fn")
                        .HasColumnType("integer");

                    b.Property<int>("fp")
                        .HasColumnType("integer");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("simId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("testEnd")
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("testStart")
                        .HasColumnType("timestamp");

                    b.Property<int>("tn")
                        .HasColumnType("integer");

                    b.Property<int>("tp")
                        .HasColumnType("integer");

                    b.Property<DateTime>("trainEnd")
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("trainStart")
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("validEnd")
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("validStart")
                        .HasColumnType("timestamp");

                    b.HasKey("modelId");

                    b.HasIndex("simId")
                        .IsUnique();

                    b.ToTable("MLModels");
                });

            modelBuilder.Entity("MiniMLBackend.Dao.SimulationInstance", b =>
                {
                    b.Property<int>("simId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("simId"));

                    b.Property<string>("simName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("trainCompleted")
                        .HasColumnType("boolean");

                    b.Property<int>("userId")
                        .HasColumnType("integer");

                    b.HasKey("simId");

                    b.HasIndex("userId");

                    b.ToTable("simulations");
                });

            modelBuilder.Entity("MiniMLBackend.Dao.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("userId"));

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("userId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("MiniMLBackend.Dao.CSVFile", b =>
                {
                    b.HasOne("MiniMLBackend.Dao.SimulationInstance", "simulationInstance")
                        .WithOne("cSVFile")
                        .HasForeignKey("MiniMLBackend.Dao.CSVFile", "simId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("simulationInstance");
                });

            modelBuilder.Entity("MiniMLBackend.Dao.MLModel", b =>
                {
                    b.HasOne("MiniMLBackend.Dao.SimulationInstance", "simulationInstance")
                        .WithOne("mLModel")
                        .HasForeignKey("MiniMLBackend.Dao.MLModel", "simId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("simulationInstance");
                });

            modelBuilder.Entity("MiniMLBackend.Dao.SimulationInstance", b =>
                {
                    b.HasOne("MiniMLBackend.Dao.User", "user")
                        .WithMany("simulations")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("MiniMLBackend.Dao.SimulationInstance", b =>
                {
                    b.Navigation("cSVFile")
                        .IsRequired();

                    b.Navigation("mLModel")
                        .IsRequired();
                });

            modelBuilder.Entity("MiniMLBackend.Dao.User", b =>
                {
                    b.Navigation("simulations");
                });
#pragma warning restore 612, 618
        }
    }
}
